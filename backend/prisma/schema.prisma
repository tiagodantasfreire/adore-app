// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String  @unique
  avatarUrl    String?
  refreshToken String?

  createdMinistries Ministry[] @relation("MinistryCreator")
  ministry          Ministry?  @relation("MinistryMember", fields: [ministryId], references: [id])

  ministryId String?
  Music      Music[] @relation("MusicCreator")
}

model Ministry {
  id        String @id @default(uuid())
  name      String
  createdBy User   @relation("MinistryCreator", fields: [userId], references: [id])
  userId    Int

  members User[]  @relation("MinistryMember")
  music   Music[] @relation("MusicCreator")
}

model Music {
  id          String   @id @default(uuid())
  name        String
  artist      String
  singer      String
  tone        Tone
  date        DateTime
  serviceName String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  createdBy User @relation("MusicCreator", fields: [userId], references: [id])
  userId    Int

  ministry   Ministry @relation("MusicCreator", fields: [ministryId], references: [id])
  ministryId String
}

enum Tone {
  A
  A_sharp @map("A#")
  B
  C
  C_sharp @map("C#")
  D
  D_sharp @map("D#")
  E
  F
  F_sharp @map("F#")
  G
  G_sharp @map("G#")
}
